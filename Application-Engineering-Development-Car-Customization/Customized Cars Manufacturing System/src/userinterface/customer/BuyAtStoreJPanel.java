/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.customer;

import business.customer.CarOrderItem;
import business.customer.CompanyCar;
import business.customer.CompanyCarCatalog;
import business.customer.MasterOrderList;
import business.customer.OrderAtStore;
import business.ecosystem.Ecosystem;
import business.enterprise.CustomerSupportEnterprise;
import business.enterprise.Enterprise;
import business.network.Network;
import business.organization.CustomerOrganization;
import business.organization.Organization;
import business.organization.StoreOrganization;
import business.useraccount.UserAccount;
import business.workqueue.OrderAtStoreWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shrutimehta
 */
public class BuyAtStoreJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BuyAtStoreJPanelNew
     */
    private JPanel userProcessContainer;
    private MasterOrderList mod;
    private CustomerOrganization customerOrganization;
    private UserAccount account;
    private Enterprise enterprise;
    private Ecosystem business;

    public BuyAtStoreJPanel(JPanel userProcessContainer, Organization organization, UserAccount account, Enterprise enterprise, Ecosystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.customerOrganization = (CustomerOrganization) organization;
        this.account = account;
        this.enterprise = enterprise;
        this.business = business;

        populateTable();

    }
    OrderAtStore oas = new OrderAtStore();
    CarOrderItem coi = new CarOrderItem();

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backJButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        carCompaniesJTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        placeOrderJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(176, 238, 238));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        backJButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/back.jpg"))); // NOI18N
        backJButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButton2ActionPerformed(evt);
            }
        });
        add(backJButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 70, 60));

        carCompaniesJTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        carCompaniesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CompanyCarId", "Brand", "ModelNumber", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(carCompaniesJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 450, 140));

        jLabel4.setFont(new java.awt.Font("ITF Devanagari Marathi", 1, 24)); // NOI18N
        jLabel4.setText("BUY AT STORE");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(402, 20, 210, 31));

        placeOrderJButton.setBackground(new java.awt.Color(51, 153, 255));
        placeOrderJButton.setText("Place Order");
        placeOrderJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeOrderJButtonActionPerformed(evt);
            }
        });
        add(placeOrderJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 370, -1, 40));
    }// </editor-fold>//GEN-END:initComponents
   private void populateTable() {
        DefaultTableModel dtm = (DefaultTableModel) carCompaniesJTable.getModel();
        dtm.setRowCount(0);
        for (Organization storeOrganization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (storeOrganization instanceof StoreOrganization) {
                CompanyCarCatalog cccat = ((StoreOrganization) storeOrganization).getCcc();

                for (CompanyCar cc : cccat.getListOfCompanyCars()) {
                    Object[] row = new Object[4];
                    row[0] = cc;
                    row[1] = cc.getBrand();
                    row[2] = cc.getModelNumber();
                    row[3] = cc.getPrice();
                    dtm.addRow(row);
                }
            }
        }
    }


    private void backJButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButton2ActionPerformed

        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButton2ActionPerformed

    private void placeOrderJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeOrderJButtonActionPerformed
        int selectedRow = carCompaniesJTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from table first to view data", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        CompanyCar cc = (CompanyCar) carCompaniesJTable.getValueAt(selectedRow, 0);
        for (Network network : business.getNetworkList()) {
            for (Enterprise enterprise : network.getEnterpriseDirectory().getEnterpriseList()) {
                if (enterprise instanceof CustomerSupportEnterprise) {
                    for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
                        if (organization instanceof StoreOrganization) {
                            mod = ((StoreOrganization) organization).getMod();
                        }

                    }
                }
            }
        }
        coi = oas.addCarOrderItem();
        coi.setCompanyCar(cc);
        oas.setCustomer(account.getEmployee());

        mod.addStoreOrder(oas);

        OrderAtStoreWorkRequest orderAtStoreWR = new OrderAtStoreWorkRequest();
        orderAtStoreWR.setOrderAtStore(oas);
        orderAtStoreWR.setStatus("Placed");
        orderAtStoreWR.setSender(account);
        account.getWorkQueue().getWorkRequestList().add(orderAtStoreWR);

        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof StoreOrganization) {
                organization.getWorkQueue().getWorkRequestList().add(orderAtStoreWR);
            }
        }

        JOptionPane.showMessageDialog(null, "Order Placed Successfully", "Information!!", JOptionPane.WARNING_MESSAGE);


    }//GEN-LAST:event_placeOrderJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backJButton2;
    private javax.swing.JTable carCompaniesJTable;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton placeOrderJButton;
    // End of variables declaration//GEN-END:variables
}
